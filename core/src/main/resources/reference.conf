log2es {

    configuration {
        # defines how many retries will be tried until a message gets dropped
        retryCount = 0

        # max number of workers
        noOfWorkers = 3

        # defines the internal queue size for elasticsearch bulk operations
        # each worker has its own queue
        queueSize = 1000

        # the interval for each worker to flush its queues (in msec)
        flushInterval = 3000

        # timeout for converting events in msec
        converterTimeout = 500

        # timeout for awaiting shutdown of log2es in msec
        shutdownAwaitTimeout = 3000

        # the elasticsearch mapping type name
        typeName = logline

        # the elasticsearch mapping index name
        indexName = log

        # whether to initialize mapping or not
        initializeMapping = true

        # Events of this level are deemed to be discardable.
        # e.g. if set to INFO then TRACE, DEBUG and INFO are discardable
        discardable = INFO

        # defines all fields that will be sent to elasticsearch
        fields = ["date", "level", "logger", "thread", "message", "stacktrace"]

        # all known elasticsearch nodes (this must be provided by log2es.conf)
        hosts = ["127.0.0.1:9300"]

        # The client allows to sniff the rest of the cluster, and add those into its list of machines to use.
        # In this case, note that the ip addresses used will be the ones that the other nodes were started with (the
        # "publish" address).
        sniffHostnames = true

        # elasticsearch cluster to join
        clusterName = ""

        # time to live in days; 0=forever; please don't set this value higher than 10^11, else you get an overflow
        ttl = 30
    }

    # Log level used by the configured loggers (see "loggers")
    loglevel = "WARNING"

    # Log level for the very basic logger activated during AkkaApplication startup
    stdout-loglevel = "WARNING"

    log-dead-letters = off

    actor {
        queued-worker-mailbox {
            mailbox-type = unbounded
        }

        # all available actors
        deployment {
            # user actor
            /log2es {
                mailbox = unbounded
            }

            # worker to handle logging events
            /log2es/queued-worker {
                router = round-robin
                mailbox = unbounded
                resizer {
                      lower-bound = 2
                      upper-bound = 10
                }
            }

            # error handler
            /log2es/error-handler {
                nr-of-instances = 1
            }

            /log2es/queued-worker/converter {
                router = round-robin
                mailbox = unbounded
                resizer {
                      lower-bound = 5
                      upper-bound = 10
                }
            }

            /log2es/queued-worker/sender {
                router = round-robin
                mailbox = unbounded
                resizer {
                      lower-bound = 5
                      upper-bound = 10
                }
            }
        }
    }

    log2es-dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "fork-join-executor"
      # Configuration for the fork join pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 2
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 2.0
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 10
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 100
    }
}